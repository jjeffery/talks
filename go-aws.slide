Go on AWS
A case study
8 Nov 2016
Tags: aws

John Jeffery
jjeffery@sp.com.au
https://github.com/jjeffery

* Why AWS?
.html go-aws/aws-title.html
And not:

- Google App Engine
- Digital Ocean
- Heroku
- Azure

In our case 2 key reasons:

- Australian-based datacentres
- Inertia: existing infrastructure already using AWS

Suggestion for future talks: discuss experience with other cloud services.

* Case Study: Easy Diet Diary 
.html go-aws/edd-logo.html
.html go-aws/edd-screenshot.html

- Calorie Counter app for iPhone
- Quality Australian food data
- More than 1 million downloads
- Top 10 free health & fitness apps

.html go-aws/shameless-plug-1.html

Uses:

- Controlling weight
- Sport nutrition
- Special dietary needs (diabetes, allergens)

* Simplified Architecture

.image go-aws/architecture.svg 

: Nothing novel here
: All Go code is on the web server
: Monolithic application

* Typical Daily Load

.image go-aws/requests-24h.png

- Peaks at about 5k requests/min at around 19:00 AEST
- Trickles away to nothing between 0:00 and 05:00 AEST

* AWS services

.image go-aws/aws-services.svg

: Call out ECS and Lambda as interesting, but I have not much experience
: Mechanical turk

* Timeline starting Mar 2014

- Server code started. Go (1.2) considered, but no AWS SDK. _(goamz_considered)_
- Wrote server code using .NET

*June-July*2015*

- Developer preview of AWS SDK for Go released (v0.6)
- Development of EDD Server code in Go commenced
- PR submitted for SimpleDB
- EDD server deployed to production

*October-November*2015*

- PR accepted for SimpleDB
- AWS SDK for Go v1.0 released

: goamz lacked features and had many forks
: onwards and upwards ever since

* AWS SDK for Go

.html go-aws/aws-sdk-go-callout.html
.link https://github.com/aws/aws-sdk-go
.link http://docs.aws.amazon.com/sdk-for-go/api/

.image go-aws/aws-sdk-go-screenshot.png

* Mechanical Turk API for Go
.link https://github.com/jjeffery/mechturk

.html go-aws/shameless-plug-2.html
.image go-aws/mechturk-screenshot.png

* Elastic Beanstalk

- Application container
- Standard recipies for load balancing, auto-scaling
- Supports Java, .NET, PHP, Python, Ruby, generic Docker ...
- ... and Go 1.5

.image go-aws/elastic-beanstalk-go15.png
.html go-aws/elastic-beanstalk-callout.html